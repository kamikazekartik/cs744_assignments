INFO:root:using Tesla V100-SXM2-16GB
INFO:root:weight    : BlockFloatingPoint (wl=8, dim=0)
INFO:root:activate  : BlockFloatingPoint (wl=8, dim=0)
INFO:root:grad      : BlockFloatingPoint (wl=8, dim=0)
INFO:root:error     : BlockFloatingPoint (wl=8, dim=0)
INFO:root:momentum  : BlockFloatingPoint (wl=8, dim=0)
Seeded everything with seed: 42
Files already downloaded and verified
Files already downloaded and verified
INFO:root:Accuracy of plane :  0 %
INFO:root:Accuracy of   car : 16 %
INFO:root:Accuracy of  bird : 88 %
INFO:root:Accuracy of   cat :  0 %
INFO:root:Accuracy of  deer :  0 %
INFO:root:Accuracy of   dog :  0 %
INFO:root:Accuracy of  frog :  0 %
INFO:root:Accuracy of horse :  0 %
INFO:root:Accuracy of  ship :  0 %
INFO:root:Accuracy of truck :  0 %
INFO:root:
Test set: Average loss: 0.0002, Accuracy: 1052/10000 (11%)

Traceback (most recent call last):
  File "main.py", line 259, in <module>
    results_df = run_experiment(args, number_dict, quant_dict)
  File "main.py", line 156, in run_experiment
    last_epoch_loss = train(model, optimizer, criterion, scaler, train_loader, args.use_amp, epoch)
  File "main.py", line 95, in train
    outputs = model(inputs)
  File "/home/treitz/.local/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/treitz/cs744_assignments/project/models/resnet.py", line 97, in forward
    out = self.layer3(out)
  File "/home/treitz/.local/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/treitz/.local/lib/python3.7/site-packages/torch/nn/modules/container.py", line 117, in forward
    input = module(input)
  File "/home/treitz/.local/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/treitz/cs744_assignments/project/models/resnet.py", line 66, in forward
    out += self.shortcut(x)
  File "/home/treitz/.local/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/treitz/.local/lib/python3.7/site-packages/torch/nn/modules/container.py", line 117, in forward
    input = module(input)
  File "/home/treitz/.local/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/treitz/.local/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 423, in forward
    return self._conv_forward(input, self.weight)
  File "/home/treitz/.local/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 420, in _conv_forward
    self.padding, self.dilation, self.groups)
RuntimeError: Unable to find a valid cuDNN algorithm to run convolution
